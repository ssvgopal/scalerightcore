version: '3.8'

services:
  # Core API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: docker/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/orchestrall
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: orchestrall
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Feature Flag Service (Unleash)
  unleash:
    image: unleashorg/unleash-server:latest
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/unleash
      - INIT_CLIENT_API_TOKENS=${UNLEASH_API_TOKEN}
    ports:
      - "4242:4242"
    depends_on:
      - db
    restart: unless-stopped

  # Agent Runtime Service
  agent-runtime:
    build:
      context: .
      dockerfile: docker/agent-runtime/Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/orchestrall
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_URL=${VECTOR_DB_URL}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Vector Database (Optional - for agent memory)
  vector-db:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  chroma_data:

networks:
  default:
    name: orchestrall-network
