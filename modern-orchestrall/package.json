{
  "name": "orchestrall-platform",
  "version": "2.0.0",
  "description": "Modern Orchestrall Platform with Multi-tenant Support",
  "main": "src/app-commercial.js",
  "scripts": {
    "start": "node src/app-commercial.js",
    "start:zero-config": "node src/app-zero-config.js",
    "dev": "nodemon src/app-commercial.js",
    "dev:zero-config": "nodemon src/app-zero-config.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:unit": "jest --testPathPattern=unit",
    "test:api": "jest --testPathPattern=api",
    "test:security": "jest --testPathPattern=security",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:api && npm run test:security",
    "db:migrate": "npx prisma migrate dev",
    "db:generate": "npx prisma generate",
    "db:seed": "node src/seed.js",
    "db:reset": "npx prisma migrate reset",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "deploy:integration": "bash deployment/deploy.sh integration",
    "deploy:staging": "bash deployment/deploy.sh staging",
    "deploy:production": "bash deployment/deploy.sh production",
    "health:integration": "bash deployment/deploy.sh health integration",
    "health:staging": "bash deployment/deploy.sh health staging",
    "health:production": "bash deployment/deploy.sh health production",
    "status:integration": "bash deployment/deploy.sh status integration",
    "status:staging": "bash deployment/deploy.sh status staging",
    "status:production": "bash deployment/deploy.sh status production",
    "rollback:integration": "bash deployment/deploy.sh rollback integration",
    "rollback:staging": "bash deployment/deploy.sh rollback staging",
    "rollback:production": "bash deployment/deploy.sh rollback production"
  },
  "jest": {
    "testEnvironment": "node",
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/tests/**/*.spec.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js",
      "!src/**/*.spec.js",
      "!src/seed.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "testTimeout": 30000,
    "verbose": true
  },
  "dependencies": {
    "@fastify/cors": "^8.4.0",
    "@fastify/helmet": "^11.1.1",
    "@fastify/jwt": "^7.2.4",
    "@fastify/rate-limit": "^9.1.0",
    "@fastify/request-context": "^4.0.0",
    "@fastify/static": "^6.12.0",
    "@fastify/swagger": "^8.12.0",
    "@fastify/swagger-ui": "^2.0.0",
    "@prisma/client": "^5.22.0",
    "axios": "^1.6.2",
    "bcrypt": "^5.1.1",
    "dotenv": "^16.3.1",
    "fastify": "^4.24.3",
    "js-yaml": "^4.1.0",
    "openai": "^4.20.1",
    "prisma": "^5.22.0",
    "redis": "^4.6.10",
    "winston": "^3.11.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/supertest": "^2.0.16",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "supertest": "^6.3.3"
  }
}